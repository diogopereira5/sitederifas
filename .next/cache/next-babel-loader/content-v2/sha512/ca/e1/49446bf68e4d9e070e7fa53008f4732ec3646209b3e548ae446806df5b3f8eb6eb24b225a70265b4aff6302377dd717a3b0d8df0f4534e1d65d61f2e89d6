{"ast":null,"code":"import _defineProperty from \"D:/projetos/rifando/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CHART } from '../actions/type';\nvar initialState = {\n  investment: {\n    name: 'Investment',\n    data: [15, 26, 36, 30, 46, 38, 60]\n  }\n};\n\nvar LineInvestment = function LineInvestment() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var payload = action.payload,\n      type = action.type;\n\n  switch (type) {\n    case CHART:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        payload: payload\n      });\n\n    default:\n      return state;\n  }\n};\n\n_c = LineInvestment;\nexport default LineInvestment;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineInvestment\");","map":{"version":3,"sources":["D:/projetos/rifando/redux/reducers/lineInvestment.js"],"names":["CHART","initialState","investment","name","data","LineInvestment","state","action","payload","type"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,iBAAtB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE,YADE;AAERC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAFE;AADK,CAArB;;AAOA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;AAAA,MAC7CC,OAD6C,GAC3BD,MAD2B,CAC7CC,OAD6C;AAAA,MACpCC,IADoC,GAC3BF,MAD2B,CACpCE,IADoC;;AAErD,UAAQA,IAAR;AACI,SAAKT,KAAL;AACI,6CACOM,KADP;AAEIE,QAAAA,OAAO,EAAPA;AAFJ;;AAIJ;AACI,aAAOF,KAAP;AAPR;AASH,CAXD;;KAAMD,c;AAaN,eAAeA,cAAf","sourcesContent":["import { CHART } from '../actions/type';\r\n\r\nconst initialState = {\r\n    investment: {\r\n        name: 'Investment',\r\n        data: [15, 26, 36, 30, 46, 38, 60],\r\n    },\r\n};\r\n\r\nconst LineInvestment = (state = initialState, action) => {\r\n    const { payload, type } = action;\r\n    switch (type) {\r\n        case CHART:\r\n            return {\r\n                ...state,\r\n                payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default LineInvestment;\r\n"]},"metadata":{},"sourceType":"module"}